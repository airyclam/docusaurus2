(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{240:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return h}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),u=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},l=function(e){var t=u(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(a),b=n,h=l["".concat(o,".").concat(b)]||l[b]||c[b]||i;return a?r.a.createElement(h,d(d({ref:t},p),{},{components:a})):r.a.createElement(h,d({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=b;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d.mdxType="string"==typeof e?e:n,o[1]=d;for(var p=2;p<i;p++)o[p]=a[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},388:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/netdata-dashboard-7c7b5a6b9d771935a6204a4d710eb995.png"},83:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return d})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return u}));var n=a(2),r=a(6),i=(a(0),a(240)),o={title:"Setup a production server using Meteor Up",sidebar_label:"Setup production server"},d={unversionedId:"developers/deployment/howto/setup-production-server-mup",id:"developers/deployment/howto/setup-production-server-mup",isDocsHomePage:!1,title:"Setup a production server using Meteor Up",description:"This page documents the process of setting up a production server for RadGrad based upon Meteor Up.",source:"@site/docs/developers/deployment/howto/setup-production-server-mup.md",slug:"/developers/deployment/howto/setup-production-server-mup",permalink:"/docs/developers/deployment/howto/setup-production-server-mup",version:"current",lastUpdatedBy:"Philip Johnson",lastUpdatedAt:1609184834,sidebar_label:"Setup production server",sidebar:"someSidebar",previous:{title:"Overview of RadGrad Deployment",permalink:"/docs/developers/deployment/overview"},next:{title:"Setup a Digital Ocean server using Meteor Up",permalink:"/docs/developers/deployment/howto/setup-digital-ocean-server-mup"}},s=[{value:"Setup &quot;radgrad&quot; account",id:"setup-radgrad-account",children:[]},{value:"Open ports",id:"open-ports",children:[]},{value:"Setup NetData",id:"setup-netdata",children:[]},{value:"Add NOPASSWD",id:"add-nopasswd",children:[]},{value:"Install mup",id:"install-mup",children:[]},{value:"Setup mup.js and settings.json",id:"setup-mupjs-and-settingsjson",children:[]},{value:"Set up server",id:"set-up-server",children:[]},{value:"Deploy to server",id:"deploy-to-server",children:[]},{value:"Check status of deployment through logs",id:"check-status-of-deployment-through-logs",children:[]}],p={rightToc:s};function u(e){var t=e.components,o=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},p,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This page documents the process of setting up a production server for RadGrad based upon ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"http://meteor-up.com"}),"Meteor Up"),"."),Object(i.b)("h2",{id:"setup-radgrad-account"},'Setup "radgrad" account'),Object(i.b)("p",null,'To start, you will need to create the ability for multiple developers to manage a single RadGrad installation on this server.  We recommend setting up an account called "radgrad" whose password is shared among developers with deploy permissions.'),Object(i.b)("h2",{id:"open-ports"},"Open ports"),Object(i.b)("p",null,"Several ports on the server will need to be open:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Port"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Service"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"22"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ssh")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"443"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"https")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"80"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"web")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"19999"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"NetData")))),Object(i.b)("h2",{id:"setup-netdata"},"Setup NetData"),Object(i.b)("p",null,"It is useful to have system load monitoring established for the production server.  One (free) choice is ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.netdata.cloud/"}),"NetData"),"."),Object(i.b)("p",null,'Follow their instructions to set up a monitor daemon on the production server and "claim" that server in their cloud-based dashboard service.  When you are done, you can easily monitor the load on your server and even set up alerts when various thresholds are crossed. Here\'s a screen shot illustrating the dashboard:'),Object(i.b)("p",null,Object(i.b)("img",{src:a(388).default})),Object(i.b)("h2",{id:"add-nopasswd"},"Add NOPASSWD"),Object(i.b)("p",null,"In order for the ",Object(i.b)("inlineCode",{parentName:"p"},"mup setup")," command to work, you must add NOPASSWD to the sudoers file on the server as documented in ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/zodern/meteor-up/blob/ee017150591f53f7f85d0a4081a1b6018230e437/README.md#ssh-based-authentication-with-sudo"}),"SSH based authentication with sudo"),"."),Object(i.b)("h2",{id:"install-mup"},"Install mup"),Object(i.b)("p",null,"Follow the instructions at ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"http://meteor-up.com/docs.html#installation"}),"http://meteor-up.com/docs.html#installation"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"npm install -g mup\n")),Object(i.b)("h2",{id:"setup-mupjs-and-settingsjson"},"Setup mup.js and settings.json"),Object(i.b)("p",null,"The app/.deploy directory, there are two template files: mup.sample.js and settings.sample.json."),Object(i.b)("p",null,"Copy mup.sample.js to mup.js and settings.sample.js to settings.js:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"cp mup.sample.js mup.js; cp settings.sample.json settings.json\n")),Object(i.b)("p",null,"Both mup.js and settings.json are ignored by git, so you can safely add credentials into those files without fear of them being committed to GitHub."),Object(i.b)("p",null,"Edit these two files, adding credentials where necessary.  See Philip if you need credentials."),Object(i.b)("h2",{id:"set-up-server"},"Set up server"),Object(i.b)("p",null,"You can now set up the server following the directions at ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"http://meteor-up.com/docs.html#setting-up-a-server"}),"http://meteor-up.com/docs.html#setting-up-a-server"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"mup setup\n")),Object(i.b)("p",null,"Sample invocation and output:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ mup setup\n\nStarted TaskList: Setup Docker\n[radgrad2.ics.hawaii.edu] - Setup Docker\n[radgrad2.ics.hawaii.edu] - Setup Docker: SUCCESS\n\nStarted TaskList: Setup Meteor\n[radgrad2.ics.hawaii.edu] - Setup Environment\n[radgrad2.ics.hawaii.edu] - Setup Environment: SUCCESS\n\nStarted TaskList: Setup Mongo\n[radgrad2.ics.hawaii.edu] - Setup Environment\n[radgrad2.ics.hawaii.edu] - Setup Environment: SUCCESS\n[radgrad2.ics.hawaii.edu] - Copying Mongo Config\n[radgrad2.ics.hawaii.edu] - Copying Mongo Config: SUCCESS\n\nStarted TaskList: Start Mongo\n[radgrad2.ics.hawaii.edu] - Start Mongo\n[radgrad2.ics.hawaii.edu] - Start Mongo: SUCCESS\n\nStarted TaskList: Setup proxy\n[radgrad2.ics.hawaii.edu] - Setup Environment\n[radgrad2.ics.hawaii.edu] - Setup Environment: SUCCESS\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script: SUCCESS\n[radgrad2.ics.hawaii.edu] - Pushing Nginx Config Template\n[radgrad2.ics.hawaii.edu] - Pushing Nginx Config Template: SUCCESS\n[radgrad2.ics.hawaii.edu] - Pushing Nginx Config\n[radgrad2.ics.hawaii.edu] - Pushing Nginx Config: SUCCESS\n[radgrad2.ics.hawaii.edu] - Cleaning Up SSL Certificates\n[radgrad2.ics.hawaii.edu] - Cleaning Up SSL Certificates: SUCCESS\n[radgrad2.ics.hawaii.edu] - Configure Nginx Upstream\n[radgrad2.ics.hawaii.edu] - Configure Nginx Upstream: SUCCESS\n\nStarted TaskList: Start proxy\n[radgrad2.ics.hawaii.edu] - Start proxy\n[radgrad2.ics.hawaii.edu] - Start proxy: SUCCESS\n\nNext, you should run:\n    mup deploy\n")),Object(i.b)("h2",{id:"deploy-to-server"},"Deploy to server"),Object(i.b)("p",null,"Now you can deploy the current version of RadGrad in your directory to the server following the directions at ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"http://meteor-up.com/docs.html#deploying-an-app"}),"http://meteor-up.com/docs.html#deploying-an-app"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"mup deploy\n")),Object(i.b)("p",null,"Sample invocation and output. This takes approximately 10 minutes on my machine to complete:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ mup deploy\nBuilding App Bundle Locally\n\nStarted TaskList: Pushing Meteor App\n[radgrad2.ics.hawaii.edu] - Pushing Meteor App Bundle to the Server\n[radgrad2.ics.hawaii.edu] - Pushing Meteor App Bundle to the Server: SUCCESS\n[radgrad2.ics.hawaii.edu] - Prepare Bundle\n[radgrad2.ics.hawaii.edu] - Prepare Bundle: SUCCESS\n\nStarted TaskList: Configuring App\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script: SUCCESS\n[radgrad2.ics.hawaii.edu] - Sending Environment Variables\n[radgrad2.ics.hawaii.edu] - Sending Environment Variables: SUCCESS\n\nStarted TaskList: Start Meteor\n[radgrad2.ics.hawaii.edu] - Start Meteor\n[radgrad2.ics.hawaii.edu] - Start Meteor: SUCCESS\n[radgrad2.ics.hawaii.edu] - Verifying Deployment\n[radgrad2.ics.hawaii.edu] - Verifying Deployment: SUCCESS\n\n")),Object(i.b)("p",null,"After deployment finishes, the app should be live at ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://radgrad2.ics.hawaii.edu"}),"https://radgrad2.ics.hawaii.edu"),"."),Object(i.b)("h2",{id:"check-status-of-deployment-through-logs"},"Check status of deployment through logs"),Object(i.b)("p",null,"To ensure that what you wanted to have happen actually happened, check the logs with mup logs:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"mup logs\n")),Object(i.b)("p",null,"Sample invocation and results:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"mup logs\n[radgrad2.ics.hawaii.edu]=> Starting meteor app on port:3000\n[radgrad2.ics.hawaii.edu]Monti APM: completed instrumenting the app\n[radgrad2.ics.hawaii.edu]Beginning startup.\n[radgrad2.ics.hawaii.edu]Invoking defineAdminUser\n[radgrad2.ics.hawaii.edu]Defining admin radgrad@hawaii.edu with password JZiOl550tBtMuHz0UzNGZEC\n[radgrad2.ics.hawaii.edu]Invoking loadDatabase\n[radgrad2.ics.hawaii.edu]Monti APM: Successfully connected\n")),Object(i.b)("p",null,"Note that when you start up the system with a new database, a new admin password will be generated and the log file will be the only place it is made available."))}u.isMDXComponent=!0}}]);