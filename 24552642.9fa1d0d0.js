(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{200:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return h}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),u=p(a),b=n,h=u["".concat(i,".").concat(b)]||u[b]||l[b]||o;return a?r.a.createElement(h,s(s({ref:t},c),{},{components:a})):r.a.createElement(h,s({ref:t},c))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=b;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},333:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/netdata-dashboard-7c7b5a6b9d771935a6204a4d710eb995.png"},334:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/robo3t-account-config-a09ccfda2ab18a00f437669edd3920ac.png"},335:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/robo3t-ssh-config-00d11ce52c33122da6b3f7e4e0b1613d.png"},336:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/robo3t-connect-050853d2ed4d3310bfb1911e676a29a1.png"},337:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/robo3t-dashboard-5087c4bc86eed068afa29cb7b518b1c1.png"},338:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/monti-apm-dashboard-96f9e9641d3824c51ac4f2a6180353c1.png"},72:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return d})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),o=(a(0),a(200)),i={title:"Setup a production server using Meteor Up",sidebar_label:"Setup production server"},s={unversionedId:"developers/deployment/howto/setup-production-server-mup",id:"developers/deployment/howto/setup-production-server-mup",isDocsHomePage:!1,title:"Setup a production server using Meteor Up",description:"This page documents the process of setting up a production server for RadGrad based upon Meteor Up.",source:"@site/docs/developers/deployment/howto/setup-production-server-mup.md",slug:"/developers/deployment/howto/setup-production-server-mup",permalink:"/docs/developers/deployment/howto/setup-production-server-mup",version:"current",sidebar_label:"Setup production server",sidebar:"someSidebar",previous:{title:"Overview of RadGrad Deployment",permalink:"/docs/developers/deployment/overview"},next:{title:"Build and publish a new release of RadGrad",permalink:"/docs/developers/deployment/howto/build-a-release-mup"}},d=[{value:"Setup developer account",id:"setup-developer-account",children:[]},{value:"Open ports",id:"open-ports",children:[]},{value:"Setup NetData",id:"setup-netdata",children:[]},{value:"Add NOPASSWD",id:"add-nopasswd",children:[]},{value:"Install mup",id:"install-mup",children:[]},{value:"Setup mup.js and settings.json",id:"setup-mupjs-and-settingsjson",children:[]},{value:"Set up server",id:"set-up-server",children:[]},{value:"Deploy to server",id:"deploy-to-server",children:[]},{value:"Setup Robo3T",id:"setup-robo3t",children:[]},{value:"Setup APM",id:"setup-apm",children:[]}],c={rightToc:d};function p(e){var t=e.components,i=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,i,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This page documents the process of setting up a production server for RadGrad based upon ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://meteor-up.com"}),"Meteor Up"),"."),Object(o.b)("h2",{id:"setup-developer-account"},"Setup developer account"),Object(o.b)("p",null,"To start, you will need to create the ability for multiple developers to manage a single RadGrad installation on this server.  You can do this either via multiple logins, each with sudo access, and a shared directory, or else via a single account whose password is shared amongst developers involved in production."),Object(o.b)("p",null,'In this page, we will assume you (or a sysadmin) has created an admin account called "radgrad" that is used by all developers to manage this installation.'),Object(o.b)("h2",{id:"open-ports"},"Open ports"),Object(o.b)("p",null,"Several ports on the server will need to be open:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Port"),Object(o.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Service"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"22"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ssh")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"443"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"https")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"80"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"web")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"19999"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"NetData")))),Object(o.b)("h2",{id:"setup-netdata"},"Setup NetData"),Object(o.b)("p",null,"It is useful to have system load monitoring established for the production server.  One (free) choice is ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.netdata.cloud/"}),"NetData"),"."),Object(o.b)("p",null,'Follow their instructions to set up a monitor daemon on the production server and "claim" that server in their cloud-based dashboard service.  When you are done, you can easily monitor the load on your server and even set up alerts when various thresholds are crossed. Here\'s a screen shot illustrating the dashboard:'),Object(o.b)("p",null,Object(o.b)("img",{src:a(333).default})),Object(o.b)("h2",{id:"add-nopasswd"},"Add NOPASSWD"),Object(o.b)("p",null,"In order for the ",Object(o.b)("inlineCode",{parentName:"p"},"mup setup")," command to work, you must add NOPASSWD to the sudoers file on the server as documented in ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/zodern/meteor-up/blob/ee017150591f53f7f85d0a4081a1b6018230e437/README.md#ssh-based-authentication-with-sudo"}),"SSH based authentication with sudo"),"."),Object(o.b)("h2",{id:"install-mup"},"Install mup"),Object(o.b)("p",null,"Follow the instructions at ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://meteor-up.com/docs.html#installation"}),"http://meteor-up.com/docs.html#installation"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"npm install -g mup\n")),Object(o.b)("h2",{id:"setup-mupjs-and-settingsjson"},"Setup mup.js and settings.json"),Object(o.b)("p",null,"In the app/.deploy directory, there are two template files: mup.sample.js and settings.sample.json."),Object(o.b)("p",null,"Copy mup.sample.js to mup.js and settings.sample.js to settings.js:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"cp mup.sample.js mup.js; cp settings.sample.json settings.json\n")),Object(o.b)("p",null,"Both mup.js and settings.json are ignored by git, so you can safely add credentials into those files without fear of them being committed to GitHub."),Object(o.b)("p",null,"Edit these two files, adding credentials where necessary.  See Philip if you need credentials."),Object(o.b)("h2",{id:"set-up-server"},"Set up server"),Object(o.b)("p",null,"You can now set up the server following the directions at ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://meteor-up.com/docs.html#setting-up-a-server"}),"http://meteor-up.com/docs.html#setting-up-a-server"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"mup setup\n")),Object(o.b)("p",null,"Sample invocation and output:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ mup setup\n\nStarted TaskList: Setup Docker\n[radgrad2.ics.hawaii.edu] - Setup Docker\n[radgrad2.ics.hawaii.edu] - Setup Docker: SUCCESS\n\nStarted TaskList: Setup Meteor\n[radgrad2.ics.hawaii.edu] - Setup Environment\n[radgrad2.ics.hawaii.edu] - Setup Environment: SUCCESS\n\nStarted TaskList: Setup Mongo\n[radgrad2.ics.hawaii.edu] - Setup Environment\n[radgrad2.ics.hawaii.edu] - Setup Environment: SUCCESS\n[radgrad2.ics.hawaii.edu] - Copying Mongo Config\n[radgrad2.ics.hawaii.edu] - Copying Mongo Config: SUCCESS\n\nStarted TaskList: Start Mongo\n[radgrad2.ics.hawaii.edu] - Start Mongo\n[radgrad2.ics.hawaii.edu] - Start Mongo: SUCCESS\n\nStarted TaskList: Setup proxy\n[radgrad2.ics.hawaii.edu] - Setup Environment\n[radgrad2.ics.hawaii.edu] - Setup Environment: SUCCESS\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script: SUCCESS\n[radgrad2.ics.hawaii.edu] - Pushing Nginx Config Template\n[radgrad2.ics.hawaii.edu] - Pushing Nginx Config Template: SUCCESS\n[radgrad2.ics.hawaii.edu] - Pushing Nginx Config\n[radgrad2.ics.hawaii.edu] - Pushing Nginx Config: SUCCESS\n[radgrad2.ics.hawaii.edu] - Cleaning Up SSL Certificates\n[radgrad2.ics.hawaii.edu] - Cleaning Up SSL Certificates: SUCCESS\n[radgrad2.ics.hawaii.edu] - Configure Nginx Upstream\n[radgrad2.ics.hawaii.edu] - Configure Nginx Upstream: SUCCESS\n\nStarted TaskList: Start proxy\n[radgrad2.ics.hawaii.edu] - Start proxy\n[radgrad2.ics.hawaii.edu] - Start proxy: SUCCESS\n\nNext, you should run:\n    mup deploy\n")),Object(o.b)("h2",{id:"deploy-to-server"},"Deploy to server"),Object(o.b)("p",null,"Now you can deploy the current version of RadGrad in your directory to the server following the directions at ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://meteor-up.com/docs.html#deploying-an-app"}),"http://meteor-up.com/docs.html#deploying-an-app"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"mup deploy\n")),Object(o.b)("p",null,"Sample invocation and output. This takes approximately 10 minutes on my machine to complete:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ mup deploy\nBuilding App Bundle Locally\n\nStarted TaskList: Pushing Meteor App\n[radgrad2.ics.hawaii.edu] - Pushing Meteor App Bundle to the Server\n[radgrad2.ics.hawaii.edu] - Pushing Meteor App Bundle to the Server: SUCCESS\n[radgrad2.ics.hawaii.edu] - Prepare Bundle\n[radgrad2.ics.hawaii.edu] - Prepare Bundle: SUCCESS\n\nStarted TaskList: Configuring App\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script: SUCCESS\n[radgrad2.ics.hawaii.edu] - Sending Environment Variables\n[radgrad2.ics.hawaii.edu] - Sending Environment Variables: SUCCESS\n\nStarted TaskList: Start Meteor\n[radgrad2.ics.hawaii.edu] - Start Meteor\n[radgrad2.ics.hawaii.edu] - Start Meteor: SUCCESS\n[radgrad2.ics.hawaii.edu] - Verifying Deployment\n[radgrad2.ics.hawaii.edu] - Verifying Deployment: SUCCESS\n\n")),Object(o.b)("p",null,"After deployment finishes, the app should be live at ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://radgrad2.ics.hawaii.edu"}),"https://radgrad2.ics.hawaii.edu"),"."),Object(o.b)("h2",{id:"setup-robo3t"},"Setup Robo3T"),Object(o.b)("p",null,"A convenient way to inspect the contents of the production database is to use ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://robomongo.org/"}),"Robo3T"),"."),Object(o.b)("p",null,"You have the choice of downloading Studio 3T or Robo 3T.  These instructions are for Robo 3T, which is simpler (and free)."),Object(o.b)("p",null,"After downloading and installing Robo3T, you must create a connection that includes port forwarding to the production MongoDB service."),Object(o.b)("p",null,"First, create a new connection and name it appropriately:"),Object(o.b)("p",null,Object(o.b)("img",{src:a(334).default})),Object(o.b)("p",null,"Next, set up SSH access to the server running the MongoDB container by clicking on the 'SSH' tab. For example, here is the dialog window for defining ssh access to radgrad2.ics.hawaii.edu:"),Object(o.b)("p",null,Object(o.b)("img",{src:a(335).default})),Object(o.b)("p",null,'If you have configured things correctly, then after pressing "Save" you\'ll get this window:'),Object(o.b)("p",null,Object(o.b)("img",{src:a(336).default})),Object(o.b)("p",null,"And after connecting, you can inspect any collection and document:"),Object(o.b)("p",null,Object(o.b)("img",{src:a(337).default})),Object(o.b)("h2",{id:"setup-apm"},"Setup APM"),Object(o.b)("p",null,"We use ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://montiapm.com/"}),"Monti APM")," for application monitoring."),Object(o.b)("p",null,'To setup Monti APM, you will need to provide credentials in the settings.json file in the "monti" section.'),Object(o.b)("p",null,"Monti APM provides useful metrics for performance optimization, as well as logging client and server side run-time errors."),Object(o.b)("p",null,"Here is a screenshot of one of the Monti APM screens:"),Object(o.b)("p",null,Object(o.b)("img",{src:a(338).default})))}p.isMDXComponent=!0}}]);