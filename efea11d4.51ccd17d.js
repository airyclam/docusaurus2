(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{227:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return d})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),o=(a(0),a(240)),d={title:"Reset the database"},i={unversionedId:"developers/deployment/howto/reset-db",id:"developers/deployment/howto/reset-db",isDocsHomePage:!1,title:"Reset the database",description:"It is often useful to restart RadGrad with a new database. This involves:",source:"@site/docs/developers/deployment/howto/reset-db.md",slug:"/developers/deployment/howto/reset-db",permalink:"/docs/developers/deployment/howto/reset-db",version:"current",lastUpdatedBy:"Philip Johnson",lastUpdatedAt:1609036627,sidebar:"someSidebar",previous:{title:"Publish a new release of RadGrad",permalink:"/docs/developers/deployment/howto/publish-a-release-mup"},next:{title:"mup commands",permalink:"/docs/developers/deployment/reference/mup-commands"}},l=[{value:"Stop RadGrad",id:"stop-radgrad",children:[]},{value:"Drop database",id:"drop-database",children:[]},{value:"Edit settings",id:"edit-settings",children:[]},{value:"Deploy with updated settings",id:"deploy-with-updated-settings",children:[]},{value:"Check status of deployment through logs",id:"check-status-of-deployment-through-logs",children:[]}],s={rightToc:l};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"It is often useful to restart RadGrad with a new database. This involves:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Stopping the current RadGrad service."),Object(o.b)("li",{parentName:"ol"},"Dropping the MongoDB RadGrad database."),Object(o.b)("li",{parentName:"ol"},"Edit the settings.json file to point to the new database to load on startup."),Object(o.b)("li",{parentName:"ol"},"Update the settings in mup and restart the RadGrad service.")),Object(o.b)("h2",{id:"stop-radgrad"},"Stop RadGrad"),Object(o.b)("p",null,"First, stop the RadGrad service:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"mup stop\n")),Object(o.b)("p",null,"Sample invocation and results:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ mup stop\n\nStarted TaskList: Stop Meteor\n[radgrad2.ics.hawaii.edu] - Stop Meteor\n[radgrad2.ics.hawaii.edu] - Stop Meteor: SUCCESS\n")),Object(o.b)("h2",{id:"drop-database"},"Drop database"),Object(o.b)("p",null,"Second, drop the database by invoking this command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"ssh radgrad@radgrad2.ics.hawaii.edu 'docker exec mongodb mongo radgrad --eval \"db.dropDatabase();\"'\n")),Object(o.b)("p",null,"Sample invocation and results:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'app/.deploy $ ssh radgrad@radgrad2.ics.hawaii.edu \'docker exec mongodb mongo radgrad --eval "db.dropDatabase();"\'\nMongoDB shell version v3.4.1\nconnecting to: mongodb://127.0.0.1:27017/radgrad\nMongoDB server version: 3.4.1\n{ "dropped" : "radgrad", "ok" : 1 }\n')),Object(o.b)("h2",{id:"edit-settings"},"Edit settings"),Object(o.b)("p",null,"Third, edit the app/.deploy/settings.json file to specify the new database."),Object(o.b)("p",null,'This usually involves changing the value of the field "databaseRestoreFileName".'),Object(o.b)("h2",{id:"deploy-with-updated-settings"},"Deploy with updated settings"),Object(o.b)("p",null,"Next, invoke mup deploy to rebuild and redeploy RadGrad."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"mup deploy\n")),Object(o.b)("p",null,"Sample invocation and results:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"app/.deploy $ $ mup deploy\nBuilding App Bundle Locally\n\nStarted TaskList: Pushing Meteor App\n[radgrad2.ics.hawaii.edu] - Pushing Meteor App Bundle to the Server\n[radgrad2.ics.hawaii.edu] - Pushing Meteor App Bundle to the Server: SUCCESS\n[radgrad2.ics.hawaii.edu] - Prepare Bundle\n[radgrad2.ics.hawaii.edu] - Prepare Bundle: SUCCESS\n\nStarted TaskList: Configuring App\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script\n[radgrad2.ics.hawaii.edu] - Pushing the Startup Script: SUCCESS\n[radgrad2.ics.hawaii.edu] - Sending Environment Variables\n[radgrad2.ics.hawaii.edu] - Sending Environment Variables: SUCCESS\n\nStarted TaskList: Start Meteor\n[radgrad2.ics.hawaii.edu] - Start Meteor\n[radgrad2.ics.hawaii.edu] - Start Meteor: SUCCESS\n[radgrad2.ics.hawaii.edu] - Verifying Deployment\n[radgrad2.ics.hawaii.edu] - Verifying Deployment: SUCCESS\n\napp/.deploy $\n")),Object(o.b)("h2",{id:"check-status-of-deployment-through-logs"},"Check status of deployment through logs"),Object(o.b)("p",null,"To ensure that what you wanted to have happen actually happened, check the logs with mup logs:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"mup logs\n")),Object(o.b)("p",null,"Sample invocation and results:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"mup logs\n[radgrad2.ics.hawaii.edu]=> Starting meteor app on port:3000\n[radgrad2.ics.hawaii.edu]Monti APM: completed instrumenting the app\n[radgrad2.ics.hawaii.edu]Beginning startup.\n[radgrad2.ics.hawaii.edu]Invoking defineAdminUser\n[radgrad2.ics.hawaii.edu]Defining admin radgrad@hawaii.edu with password JZiOl550tBtMuHz0UzNGZEC\n[radgrad2.ics.hawaii.edu]Invoking loadDatabase\n[radgrad2.ics.hawaii.edu]Monti APM: Successfully connected\n")),Object(o.b)("p",null,"Note that when you start up the system with a new database, a new admin password will be generated and the log file will be the only place it is made available."))}p.isMDXComponent=!0},240:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return h}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function d(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?d(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):d(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(a),b=n,h=c["".concat(d,".").concat(b)]||c[b]||u[b]||o;return a?r.a.createElement(h,i(i({ref:t},s),{},{components:a})):r.a.createElement(h,i({ref:t},s))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,d=new Array(o);d[0]=b;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,d[1]=i;for(var s=2;s<o;s++)d[s]=a[s];return r.a.createElement.apply(null,d)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"}}]);