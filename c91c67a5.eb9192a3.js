(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{203:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return d})),n.d(t,"default",(function(){return c}));var i=n(2),r=n(6),a=(n(0),n(240)),s={title:"How to write integration tests",sidebar_label:"Write integration tests"},o={unversionedId:"developers/testing/howto/write-integration-tests",id:"developers/testing/howto/write-integration-tests",isDocsHomePage:!1,title:"How to write integration tests",description:"Integration tests are initiated from the client side, and test to ensure that client-server interactions work as intended. Currently, integration tests only check that Meteor method implementations function correctly.",source:"@site/docs/developers/testing/howto/write-integration-tests.md",slug:"/developers/testing/howto/write-integration-tests",permalink:"/docs/developers/testing/howto/write-integration-tests",version:"current",lastUpdatedBy:"Philip Johnson",lastUpdatedAt:1603935484,sidebar_label:"Write integration tests",sidebar:"someSidebar",previous:{title:"How to write unit tests",permalink:"/docs/developers/testing/howto/write-unit-tests"},next:{title:"How to write acceptance tests",permalink:"/docs/developers/testing/howto/write-acceptance-tests"}},d=[{value:"Running all integration tests",id:"running-all-integration-tests",children:[]},{value:"Run a subset of integration tests",id:"run-a-subset-of-integration-tests",children:[]}],l={rightToc:d};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Integration tests are initiated from the client side, and test to ensure that client-server interactions work as intended. Currently, integration tests only check that Meteor method implementations function correctly."),Object(a.b)("p",null,'Each collection class contains its tests in a "sibling" file. Integration tests for the CourseCollection class are located in ',Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/radgrad/radgrad/blob/master/app/imports/api/course/CourseInstanceCollection.methods.app-test.js"}),"CourseCollection.app-test.js"),"."),Object(a.b)("p",null,"The test file names are important: Meteor wants integration tests to be in files with the suffix ",Object(a.b)("inlineCode",{parentName:"p"},"app-test.js"),"."),Object(a.b)("p",null,'Many tests require the database to be initialized with test values.  RadGrad provides "database fixture" files for this purpose. See the ',Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"docs/developers/testing/concepts/database-fixtures"}),"DB fixture")," chapter for more details."),Object(a.b)("h2",{id:"running-all-integration-tests"},"Running all integration tests"),Object(a.b)("p",null,"To run all the integration tests, run this command:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"$ meteor npm run test-integration\n")),Object(a.b)("p",null,"This will run the integration tests (i.e. those files with a ",Object(a.b)("inlineCode",{parentName:"p"},"test-app.js")," suffix). Here's a sample invocation, again with some lines elided:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"$ meteor npm run test-integration\n\n> radgrad@ test-integration /Users/philipjohnson/github/radgrad/radgrad/app\n> METEOR_NO_RELEASE_CHECK=1 TEST_BROWSER_DRIVER=nightmare meteor test --full-app --once --driver-package dispatch:mocha --port 3100\n[[[[[ Tests ]]]]]\n=> Started proxy.\n=> Started MongoDB.\nI20170829-15:22:11.926(-10)? --------------------------------\nI20170829-15:22:11.934(-10)? ----- RUNNING SERVER TESTS -----\nI20170829-15:22:11.935(-10)? --------------------------------\nI20170829-15:22:11.937(-10)?   0 passing (0ms)\nI20170829-15:22:11.939(-10)? --------------------------------\nI20170829-15:22:11.939(-10)? ----- RUNNING CLIENT TESTS -----\nI20170829-15:22:11.940(-10)? --------------------------------\nI20170829-15:22:11.969(-10)? Kadira: completed instrumenting the app\nI20170829-15:22:11.970(-10)? Test mode. Database initialization disabled, current database cleared, rate limiting disabled.\n=> Started your app.\n=> App running at: http://localhost:3100/\nI20170829-15:22:14.691(-10)?   CareerGoalCollection Meteor Methods\nI20170829-15:22:14.773(-10)?     Loaded database/testing/minimal.fixture.json: Sample definitions for basic entities.\nI20170829-15:22:15.310(-10)?     Loaded database/testing/abi.student.fixture.json: Defines student Abi Kealoha. Requires minimal.fixture.\nI20170829-15:22:15.379(-10)?     Loaded database/testing/extended.courses.interests.fixture.json: Extends minimal with remaining ICS/EE courses and interests.\nI20170829-15:22:16.508(-10)?     Loaded database/testing/academicplan.fixture.json: Defines Academic Plans. Requires extended.courses.interests.\nI20170829-15:22:16.746(-10)?     Loaded database/testing/abi.courseinstances.fixture.json: Abi's course instances. Requires abi.user and extended.courses.interests.\nI20170829-15:22:17.793(-10)?     \u2713 Define Method (594ms)\nI20170829-15:22:17.817(-10)?     \u2713 Update Method\nI20170829-15:22:17.849(-10)?     \u2713 Remove Method\n          :                                :                     :\n          :                                :                     :\nI20170829-15:22:36.396(-10)?   VerificationRequestCollection Meteor Methods\nI20170829-15:22:36.466(-10)?     Loaded database/testing/minimal.fixture.json: Sample definitions for basic entities.\nI20170829-15:22:36.606(-10)?     Loaded database/testing/abi.student.fixture.json: Defines student Abi Kealoha. Requires minimal.fixture.\nI20170829-15:22:36.626(-10)?     Loaded database/testing/opportunities.fixture.json: Sample opportunities. Requires admin.user.\nI20170829-15:22:37.443(-10)?     \u2713 ProcessVerificationEvent Method (693ms)\nI20170829-15:22:37.446(-10)?   60 passing (23s)\nI20170829-15:22:37.446(-10)?   3 pending\nI20170829-15:22:37.611(-10)? All tests finished!\nI20170829-15:22:37.612(-10)? --------------------------------\nI20170829-15:22:37.612(-10)? SERVER FAILURES: 0\nI20170829-15:22:37.613(-10)? CLIENT FAILURES: 0\nI20170829-15:22:37.614(-10)? --------------------------------\n")),Object(a.b)("p",null,"As you can see, in contrast to unit tests, no server-only tests were invoked."),Object(a.b)("h2",{id:"run-a-subset-of-integration-tests"},"Run a subset of integration tests"),Object(a.b)("p",null,"To run a subset of the tests you can set the environment variable ",Object(a.b)("inlineCode",{parentName:"p"},"MOCHA_GREP"),". If ",Object(a.b)("inlineCode",{parentName:"p"},"MOCHA_GREP")," matches the name of the test as defined in the ",Object(a.b)("inlineCode",{parentName:"p"},"describe")," statement those tests will run."),Object(a.b)("p",null,"For example:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),'$ export MOCHA_GREP="CourseCollection"\n$ meteor npm run test-integration\n\n> radgrad2@ test-integration /Users/philipjohnson/github/radgrad/radgrad2/app\n> cross-env TEST_BROWSER_DRIVER=puppeteer meteor test --no-release-check --exclude-archs web.browser.legacy,web.cordova --full-app --once --driver-package meteortesting:mocha --port 3300\n\n[[[[[ Tests ]]]]]\n\n=> Started proxy.\n=> Started MongoDB.\nI20201028-14:38:56.775(-10)?\nI20201028-14:38:56.814(-10)? --------------------------------\nI20201028-14:38:56.815(-10)? --- RUNNING APP SERVER TESTS ---\nI20201028-14:38:56.815(-10)? --------------------------------\nI20201028-14:38:56.815(-10)?\nI20201028-14:38:56.815(-10)?\nI20201028-14:38:56.815(-10)?\nI20201028-14:38:56.816(-10)?   0 passing (0ms)\nI20201028-14:38:56.816(-10)?\nI20201028-14:38:56.816(-10)?\nI20201028-14:38:56.816(-10)? --------------------------------\nI20201028-14:38:56.816(-10)? --- RUNNING APP CLIENT TESTS ---\nI20201028-14:38:56.816(-10)? --------------------------------\nI20201028-14:38:57.102(-10)? Monti APM: completed instrumenting the app\nI20201028-14:38:57.103(-10)? Test mode. Database initialization disabled, current database cleared, rate limiting disabled.\nI20201028-14:38:57.293(-10)? Defining admin radgrad@hawaii.edu with password foo\n=> Started your app.\n\n=> App running at: http://localhost:3300/\nI20201028-14:38:57.431(-10)? HeadlessChrome/86.0.4240.0\nW20201028-14:38:58.841(-10)? (STDERR)\nI20201028-14:38:59.354(-10)? Download the React DevTools for a better development experience: https://fb.me/react-devtools\nW20201028-14:39:01.133(-10)? (STDERR) Warning: "Responsive" component from Semantic UI React is deprecated and will be removed in the next major release. Please follow our upgrade guide: https://github.com/Semantic-Org/Semantic-UI-React/pull/4008\nI20201028-14:39:01.196(-10)?\nI20201028-14:39:01.196(-10)?   CourseCollection Meteor Methods\nI20201028-14:39:01.253(-10)?     Loaded database/modular/minimal.fixture.json: Sample definitions for basic entities.\nW20201028-14:39:01.546(-10)? (STDERR) waitFor is deprecated and will be removed in a future release. See https://github.com/puppeteer/puppeteer/issues/6214 for details and how to migrate your code.\nI20201028-14:39:01.805(-10)?     Loaded database/modular/abi.student.fixture.json: Defines student Abi Kealoha. Requires minimal.fixture.\nI20201028-14:39:02.512(-10)?     \u2713 Define Method (539ms)\nI20201028-14:39:02.550(-10)?     \u2713 Update Method\nI20201028-14:39:02.875(-10)?     \u2713 getFutureEnrollment Methods (324ms)\nI20201028-14:39:02.908(-10)?     \u2713 Remove Method\nI20201028-14:39:02.909(-10)?   FavoriteCourseCollection\nI20201028-14:39:02.938(-10)?     Loaded database/modular/minimal.fixture.json: Sample definitions for basic entities.\nI20201028-14:39:03.211(-10)?     Loaded database/modular/abi.student.fixture.json: Defines student Abi Kealoha. Requires minimal.fixture.\nI20201028-14:39:03.713(-10)?     \u2713 #define, #update, #removeIt Methods (461ms)\nI20201028-14:39:03.715(-10)?   5 passing (3s)\nI20201028-14:39:03.809(-10)? All tests finished!\nI20201028-14:39:03.809(-10)?\nI20201028-14:39:03.809(-10)? --------------------------------\nI20201028-14:39:03.810(-10)? APP SERVER FAILURES: 0\nI20201028-14:39:03.810(-10)? APP CLIENT FAILURES: 0\nI20201028-14:39:03.810(-10)? --------------------------------\n$\n\n')))}c.isMDXComponent=!0},240:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var i=n(0),r=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),c=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),p=c(n),b=i,m=p["".concat(s,".").concat(b)]||p[b]||u[b]||a;return n?r.a.createElement(m,o(o({ref:t},l),{},{components:n})):r.a.createElement(m,o({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=b;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var l=2;l<a;l++)s[l]=n[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);