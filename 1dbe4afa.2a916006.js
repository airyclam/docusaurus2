(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{240:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),l=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},h=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=r,b=d["".concat(p,".").concat(h)]||d[h]||c[h]||a;return n?o.a.createElement(b,i(i({ref:t},u),{},{components:n})):o.a.createElement(b,i({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,p=new Array(a);p[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var u=2;u<a;u++)p[u]=n[u];return o.a.createElement.apply(null,p)}return o.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(2),o=n(6),a=(n(0),n(240)),p={title:"Setup a Digital Ocean server using Meteor Up",sidebar_label:"Setup Digital Ocean server"},i={unversionedId:"developers/deployment/howto/setup-digital-ocean-server-mup",id:"developers/deployment/howto/setup-digital-ocean-server-mup",isDocsHomePage:!1,title:"Setup a Digital Ocean server using Meteor Up",description:"This page documents the process of setting up a digital ocean server for RadGrad based upon Meteor Up.",source:"@site/docs/developers/deployment/howto/setup-digital-ocean-server-mup.md",slug:"/developers/deployment/howto/setup-digital-ocean-server-mup",permalink:"/docs/developers/deployment/howto/setup-digital-ocean-server-mup",version:"current",lastUpdatedBy:"Philip Johnson",lastUpdatedAt:1609184834,sidebar_label:"Setup Digital Ocean server",sidebar:"someSidebar",previous:{title:"Setup a production server using Meteor Up",permalink:"/docs/developers/deployment/howto/setup-production-server-mup"},next:{title:"Setup Robo3T",permalink:"/docs/developers/deployment/howto/setup-robo3t"}},s=[{value:"Sign up with Digital Ocean",id:"sign-up-with-digital-ocean",children:[]},{value:"Create an Ubuntu server (i.e. Droplet)",id:"create-an-ubuntu-server-ie-droplet",children:[]},{value:"Configure app/.deploy/mup.js",id:"configure-appdeploymupjs",children:[]},{value:"Configure app/.deploy/settings.js",id:"configure-appdeploysettingsjs",children:[]},{value:"Run mup setup",id:"run-mup-setup",children:[]},{value:"Run mup deploy",id:"run-mup-deploy",children:[]},{value:"Check status of deployment through logs",id:"check-status-of-deployment-through-logs",children:[]},{value:"Setup SSL and HTTPS",id:"setup-ssl-and-https",children:[]}],u={rightToc:s};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This page documents the process of setting up a digital ocean server for RadGrad based upon ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"http://meteor-up.com"}),"Meteor Up"),"."),Object(a.b)("h2",{id:"sign-up-with-digital-ocean"},"Sign up with Digital Ocean"),Object(a.b)("p",null,"First, go to ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.digitalocean.com/?refcode=puttingAnythingHereSeemsToMakeTheButtonForThe$100CreditAppear"}),"Digital Ocean"),'. Using this link might get you a "Free Credit Active" link that will get you some free minutes.'),Object(a.b)("h2",{id:"create-an-ubuntu-server-ie-droplet"},"Create an Ubuntu server (i.e. Droplet)"),Object(a.b)("p",null,'Click on the "Create" button and select a Droplet (Ubuntu server). Create a root password and save it someplace safe.'),Object(a.b)("h2",{id:"configure-appdeploymupjs"},"Configure app/.deploy/mup.js"),Object(a.b)("p",null,"Copy the sample.mup.js file to mup.js.  It will look something like this:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"module.exports = {\n  servers: {\n    one: {\n      host: '111.222.333.444',\n      username: 'root',\n      password: 'changeme'\n    }\n  },\n\n  app: {\n    name: 'meteor-application-template-react',\n    path: '../',\n\n    servers: {\n      one: {},\n    },\n\n    buildOptions: {\n      serverOnly: true,\n    },\n\n    env: {\n      ROOT_URL: 'http://111.222.333.444',\n      MONGO_URL: 'mongodb://mongodb/meteor',\n      MONGO_OPLOG_URL: 'mongodb://mongodb/local',\n    },\n\n    docker: {\n      image: 'abernix/meteord:node-12-base',\n    },\n\n    enableUploadProgressBar: true\n  },\n\n  mongo: {\n    version: '3.4.1',\n    servers: {\n      one: {}\n    }\n  },\n};\n")),Object(a.b)("p",null,"There is one occurrence of the string \u201cchangeme\u201d, and two occurrences of the string \u201c111.222.333.444\u201d."),Object(a.b)("p",null,"Change the string \u201cchangeme\u201d (i.e. the server root password) to the Droplet root password you specified above."),Object(a.b)("p",null,"Change the string \u201c111.222.333.444\u201d to the IP address associated with this Droplet. (In the screenshots above, the Droplet\u2019s IP address is 167.172.222.158.) Be sure to use the \u201cipv4\u201d address, not the \u201cPrivate IP\u201d address!"),Object(a.b)("p",null,"Note that the \u201chost\u201d value is just the IP address, but the ROOT_URL is \u201chttp://\u201d followed by the IP address."),Object(a.b)("h2",{id:"configure-appdeploysettingsjs"},"Configure app/.deploy/settings.js"),Object(a.b)("p",null,"Copy sample.settings.js to settings.js.  Edit this file to include appropriate credentials and other information specific to your deployment."),Object(a.b)("h2",{id:"run-mup-setup"},"Run mup setup"),Object(a.b)("p",null,"Inside the app/.deploy directory, invoke \u201cmup setup\u201d (or \u201cmup.cmd setup\u201d on Windows). You should get output like the following:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"$ mup setup\n\nStarted TaskList: Setup Docker\n[167.172.222.158] - Setup Docker\n[167.172.222.158] - Setup Docker: SUCCESS\n\nStarted TaskList: Setup Meteor\n[167.172.222.158] - Setup Environment\n[167.172.222.158] - Setup Environment: SUCCESS\n\nStarted TaskList: Setup Mongo\n[167.172.222.158] - Setup Environment\n[167.172.222.158] - Setup Environment: SUCCESS\n[167.172.222.158] - Copying Mongo Config\n[167.172.222.158] - Copying Mongo Config: SUCCESS\n\nStarted TaskList: Start Mongo\n[167.172.222.158] - Start Mongo\n[167.172.222.158] - Start Mongo: SUCCESS\n\nNext, you should run:\n    mup deploy\n\n$\n")),Object(a.b)("p",null,"For more details on the setup command, see ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"http://meteor-up.com/docs.html#setting-up-a-server"}),"http://meteor-up.com/docs.html#setting-up-a-server"),"."),Object(a.b)("h2",{id:"run-mup-deploy"},"Run mup deploy"),Object(a.b)("p",null,"Now you can bundle up your Meteor application, send it over to the Droplet, and start it running on your Droplet."),Object(a.b)("p",null,"Inside the app/.deploy directory, invoke \u201cmup deploy\u201d (or, on Windows \u201cmup.cmd deploy\u201d). You should get output like the following:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"$ mup deploy\nBuilding App Bundle Locally\n\nStarted TaskList: Pushing Meteor App\n[167.172.222.158] - Pushing Meteor App Bundle to the Server\n[167.172.222.158] - Pushing Meteor App Bundle to the Server: SUCCESS\n[167.172.222.158] - Prepare Bundle\n[167.172.222.158] - Prepare Bundle: SUCCESS\n\nStarted TaskList: Configuring App\n[167.172.222.158] - Pushing the Startup Script\n[167.172.222.158] - Pushing the Startup Script: SUCCESS\n[167.172.222.158] - Sending Environment Variables\n[167.172.222.158] - Sending Environment Variables: SUCCESS\n\nStarted TaskList: Start Meteor\n[167.172.222.158] - Start Meteor\n[167.172.222.158] - Start Meteor: SUCCESS\n[167.172.222.158] - Verifying Deployment\n[167.172.222.158] - Verifying Deployment: SUCCESS\n")),Object(a.b)("p",null,"For more details on the deploy command, see ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"http://meteor-up.com/docs.html#deploying-an-app"}),"http://meteor-up.com/docs.html#deploying-an-app"),"."),Object(a.b)("p",null,"After deployment finishes, the app should be live."),Object(a.b)("h2",{id:"check-status-of-deployment-through-logs"},"Check status of deployment through logs"),Object(a.b)("p",null,"To ensure that what you wanted to have happen actually happened, check the logs with mup logs:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"mup logs\n")),Object(a.b)("p",null,"Sample invocation and results:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"mup logs\n[radgrad2.ics.hawaii.edu]=> Starting meteor app on port:3000\n[radgrad2.ics.hawaii.edu]Monti APM: completed instrumenting the app\n[radgrad2.ics.hawaii.edu]Beginning startup.\n[radgrad2.ics.hawaii.edu]Invoking defineAdminUser\n[radgrad2.ics.hawaii.edu]Defining admin radgrad@hawaii.edu with password asfasdf\n[radgrad2.ics.hawaii.edu]Invoking loadDatabase\n[radgrad2.ics.hawaii.edu]Monti APM: Successfully connected\n")),Object(a.b)("p",null,"Note that when you start up the system with a new database, a new admin password will be generated and the log file will be the only place it is made available."),Object(a.b)("h2",{id:"setup-ssl-and-https"},"Setup SSL and HTTPS"),Object(a.b)("p",null,"You will probably want to buy a custom domain name and then setup SSL so that you can access the RadGrad instance using https. For instructions, please see ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"http://courses.ics.hawaii.edu/ics314f20/morea/deployment/reading-digital-ocean-https.html"}),"How to setup HTTPS"),"."))}l.isMDXComponent=!0}}]);